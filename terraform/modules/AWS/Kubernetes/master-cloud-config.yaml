#cloud-config

# wait for an internet connection
bootcmd:
  - until ping -W 1 -c1 8.8.8.8 >/dev/null; do sleep 1; done

package_update: true
package_upgrade: true
disable_root: false

packages: [ 'figlet' ]
hostname: "${hostname}"

write_files:
  - path: /etc/bash.bashrc
    permissions: '0755'
    content: !!binary |
      ${master_bashrc}
  - path: /root/.inputrc
    permissions: '0755'
    content: !!binary |
      ${master_inputrc}
  - path: /root/.bash_aliases
    permissions: '0755'
    content: !!binary |
      ${master_aliases}
  - path: /etc/default/motd-news
    owner: root:root
    permissions: '0644'
    content: |
      ENABLED=0
  - path: /etc/pam.d/sshd
    owner: root:root
    permissions: "0644"
    content: !!binary |
      ${pamd_sshd_config}
  - path: /etc/ssh/sshd_config
    owner: root:root
    permissions: "0644"
    content: !!binary |
      ${sshd_config}


runcmd:
  - 'echo "br_netfilter" >> /etc/modules-load.d/k8s.conf && modprobe br_netfilter'
  - 'echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.d/k8s.conf'
  - 'echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.d/k8s.conf'
  - 'echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.d/k8s.conf'
  - 'sysctl --load=/etc/sysctl.d/k8s.conf'
  - 'curl -sL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/google-cloud.gpg >/dev/null'
  - 'apt-add-repository "deb https://apt.kubernetes.io/ kubernetes-xenial main" -y'
  - 'apt install -y containerd kubelet=${version}-00 kubeadm=${version}-00 kubectl=${version}-00 awscli'
  - 'systemctl enable --now containerd'
  - 'systemctl enable --now kubelet'
  - 'kubeadm init --pod-network-cidr=192.168.0.0/16 --kubernetes-version=v${version}'
  - 'mkdir /root/.kube'
  - 'cp /etc/kubernetes/admin.conf /root/.kube/config'
  - 'kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://projectcalico.docs.tigera.io/manifests/calico.yaml' # needs to be versioned
  - "grep -A 1 'kubeadm join' /var/log/cloud-init-output.log | tr -d '\\\n\r\t' > /tmp/join.txt"
  - 'aws s3 cp /tmp/join.txt s3://${s3_bucket_name}'
  - 'aws s3 cp /root/.kube/config s3://${s3_bucket_name}'
  - 'curl -L https://github.com/containerd/nerdctl/releases/download/v0.17.0/nerdctl-0.17.0-linux-amd64.tar.gz -o /tmp/nerdctl.tar.gz'
  - 'tar -xf /tmp/nerdctl.tar.gz nerdctl -O > /tmp/nerdctl'
  - 'install /tmp/nerdctl /usr/local/bin/'

output:
  all: '| tee -a /var/log/cloud-init-output.log'
